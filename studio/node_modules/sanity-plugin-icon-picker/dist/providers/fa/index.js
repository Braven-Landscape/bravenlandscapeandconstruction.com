"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _react = _interopRequireDefault(require("react"));

var _helpers = require("../../utils/helpers");

var _fontawesomeSvgCore = require("@fortawesome/fontawesome-svg-core");

var _reactFontawesome = require("@fortawesome/react-fontawesome");

var faIcons = _interopRequireWildcard(require("@fortawesome/free-solid-svg-icons"));

var _icons = _interopRequireDefault(require("./icons"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var libList = _icons["default"].map(function (item) {
  return faIcons[(0, _helpers.toCamel)("fa-" + item)];
});

var iconStyle = {
  width: "20px",
  height: "20px",
  fontSize: "20px"
};

_fontawesomeSvgCore.library.add.apply(_fontawesomeSvgCore.library, (0, _toConsumableArray2["default"])(libList));

function _default(provider) {
  return function () {
    return _icons["default"].map(function (name) {
      return {
        provider: provider,
        name: name,
        component: function component() {
          return /*#__PURE__*/_react["default"].createElement(_reactFontawesome.FontAwesomeIcon, {
            style: iconStyle,
            icon: name
          });
        }
      };
    });
  };
}